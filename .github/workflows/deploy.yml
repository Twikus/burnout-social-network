name: Deploy Burnout Social Network Application

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, dom, filter, gd, json, libxml
          coverage: none

      - name: Install PHP dependencies
        run: composer install --no-dev --optimize-autoloader

      - name: Install Node.js dependencies
        run: npm install

      - name: Build frontend assets
        run: npm run build

      - name: Create deployment archive
        run: |
          # Cr√©er un dossier temporaire pour les fichiers √† d√©ployer
          mkdir -p /tmp/deploy_burnout

          # Copier tous les fichiers n√©cessaires (en excluant ceux non d√©sir√©s)
          rsync -a --exclude={'.git','.github','node_modules'} ./ /tmp/deploy_burnout/

          # Cr√©er les dossiers de stockage n√©cessaires
          mkdir -p /tmp/deploy_burnout/storage/{logs,framework/{cache,sessions,views}}

          # Cr√©er l'archive √† partir du dossier temporaire
          cd /tmp && tar -czf deploy.tar.gz deploy_burnout
          mv /tmp/deploy.tar.gz $GITHUB_WORKSPACE/

          # Nettoyer
          rm -rf /tmp/deploy_burnout

      - name: Setup SSH key
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Transfer files to server
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "deploy.tar.gz"
          target: "/tmp"

      - name: Deploy to server via SSH
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -e

            BASE_DIR="$HOME/domains/axelduquelzar.fr/public_html"
            APP_NAME="burnout"
            APP_DIR="$BASE_DIR/$APP_NAME"
            BACKUP_DIR="${APP_DIR}_backup_$(date +'%Y%m%d%H%M%S')"

            echo "üìÇ Aller dans le dossier parent : $BASE_DIR"
            cd "$BASE_DIR"

            if [ -d "$APP_NAME" ]; then
              echo "üîß Mise en maintenance..."
              php "$APP_NAME/artisan" down || true

              echo "üíæ Sauvegarde du fichier .env"
              cp "$APP_NAME/.env" "$BASE_DIR/.env.backup.burnout" || true

              echo "üì¶ Backup de l'ancienne version..."
              mv "$APP_NAME" "$BACKUP_DIR"
            fi

            echo "üìÅ Cr√©ation du dossier d'application..."
            mkdir -p "$APP_NAME"

            echo "üì¶ D√©compression des fichiers..."
            tar -xzf /tmp/deploy.tar.gz -C "$APP_NAME" --strip-components=1
            rm /tmp/deploy.tar.gz

            cd "$APP_NAME"

            echo "üìÑ Restauration du fichier .env"
            cp "$BASE_DIR/.env.backup.burnout" .env || true

            echo "‚öôÔ∏è Ex√©cution des migrations Laravel..."
            php artisan migrate --force

            echo "‚ö° Mise en cache Laravel..."
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache

            echo "‚úÖ Fin de maintenance..."
            php artisan up

            echo "üßπ Suppression du backup pr√©c√©dent..."
            rm -rf "$BACKUP_DIR"

            echo "‚úîÔ∏è D√©ploiement termin√© avec succ√®s !"
